@{
    ViewBag.Title = "Phone";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categoryDisplayName = "Điện thoại";
    var itemNounLower = "điện thoại"; // for button text

}
<link href="~/Content/home-promo.css" rel="stylesheet" />
<link href="~/Content/category.css" rel="stylesheet" />

<div class="cat-wrap container">
    <!-- Breadcrumb -->
    <nav class="cat-breadcrumb">
        <a class="home-link" href="@Url.Action("Index","Home")">Trang chủ</a>
        <span class="sep">›</span>
        <span><span class="js-total-count">0</span> @categoryDisplayName</span>
    </nav>



    <!-- Brand filter (text chips) -->
    <div class="brand-filter">
        <button type="button" class="chip active">SAMSUNG</button>
        <button type="button" class="chip">iPhone</button>
        <button type="button" class="chip">OPPO</button>
        <button type="button" class="chip">Xiaomi</button>
        <button type="button" class="chip">vivo</button>
        <button type="button" class="chip">realme</button>
        <button type="button" class="chip">HONOR</button>
        <button type="button" class="chip">Motorola</button>
        <button type="button" class="chip">TECNO</button>
    </div>
    <!-- Sort bar -->
    <div class="sort-bar">
        <span class="label">Sắp xếp theo:</span>
        <button type="button" class="sort-item active" data-sort="noi-bat">Nổi bật</button>
        <span class="dot">•</span>
        <button type="button" class="sort-item" data-sort="ban-chay">Bán chạy</button>
        <span class="dot">•</span>
        <button type="button" class="sort-item" data-sort="giam-gia">Giảm giá</button>
        <span class="dot">•</span>
        <button type="button" class="sort-item" data-sort="moi">Mới</button>
        <span class="dot">•</span>
        <div class="sort-item dropdown" data-sort="gia">
            <button type="button" class="dropdown-toggle">Giá ▾</button>
            <div class="dropdown-menu">
                <button type="button" class="dropdown-item" data-sort="gia-cao-thap">Giá cao → thấp</button>
                <button type="button" class="dropdown-item" data-sort="gia-thap-cao">Giá thấp → cao</button>
            </div>
        </div>
    </div>

    <!-- Product list container: place your product cards inside -->
    <div class="product-list js-product-list">
        @* Ensure each product card has class "js-product-card" (or "product-card") for counting and load-more *@
        <div class="product-grid" data-tab-panel="dienthoai" id="applePanel" role="link" tabindex="0" aria-label="Đi tới trang chi tiết sản phẩm Apple">
            @for (int i = 0; i < 15; i++)
            {
                <article class="product-card">
                    <div class="card-topline">
                        <span class="pill mint">Trả góp 0%</span>
                        <span class="pill rose">Mẫu mới</span>
                    </div>

                    <div class="product-thumb" aria-label="Placeholder image">
                        <!-- TODO: Đổi đường dẫn hình đúng cho Apple -->
                        <img class="thumb-img"
                             src="~/Content/img/ip1.jpg"
                             alt="Iphone 17"
                             loading="lazy" decoding="async"
                             style="width:100%;height:100%;object-fit:contain;display:block;" />
                    </div>

                    <h3 class="product-name">Iphone 17 256GB</h3>
                    <div class="product-variant">256GB</div>

                    <div class="price-line">
                        <span class="price">39.990.990₫</span>
                        <span class="price-old">42.990.000₫</span>
                        <span class="discount">-7%</span>
                    </div>

                    <div class="benefit">Quà 500.000₫</div>
                    <div class="rating-line">★ 4.8 • 1.2k đánh giá</div>
                </article>
            }
        </div>
    </div>

    <!-- Load more button -->
    <div class="load-more-wrap">
        <button type="button" class="load-more-btn js-load-more" data-itemname="@itemNounLower">
            Xem thêm <span class="js-remaining-count">0</span> @itemNounLower
        </button>
    </div>
</div>


<script>
    (function () {
        // Sort UI (highlight only)
        const sortItems = document.querySelectorAll('.sort-item:not(.dropdown)');
        sortItems.forEach(btn => {
            btn.addEventListener('click', () => {
                document.querySelectorAll('.sort-item').forEach(x => x.classList.remove('active'));
                btn.classList.add('active');
            });
        });

        // Price dropdown behavior
        const dropdown = document.querySelector('.dropdown');
        const toggle = dropdown?.querySelector('.dropdown-toggle');
        toggle?.addEventListener('click', (e) => {
            e.stopPropagation();
            dropdown.classList.toggle('open');
            // Visual select state on "Giá" when any price option is chosen
            document.querySelectorAll('.sort-item').forEach(x => x.classList.remove('active'));
            dropdown.classList.add('active');
        });
        dropdown?.querySelectorAll('.dropdown-item').forEach(item => {
            item.addEventListener('click', (e) => {
                e.stopPropagation();
                dropdown.classList.remove('open');
            });
        });
        document.addEventListener('click', () => dropdown?.classList.remove('open'));

        // Brand chip active state (UI only)
        document.querySelectorAll('.brand-filter .chip').forEach(chip => {
            chip.addEventListener('click', () => {
                document.querySelectorAll('.brand-filter .chip').forEach(c => c.classList.remove('active'));
                chip.classList.add('active');
            });
        });

        // Product counting + load more
        const list = document.querySelector('.js-product-list') || document;
        const cardSelector = '.js-product-card, .product-card, [data-product-card]';
        const pageSize = 15;

        const cards = Array.from(list.querySelectorAll(cardSelector));
        const totalCount = cards.length;
        const totalCountEl = document.querySelector('.js-total-count');
        if (totalCountEl) totalCountEl.textContent = String(totalCount);

        // Initialize hidden state for load more
        cards.forEach((c, i) => {
            if (i >= pageSize) c.classList.add('is-hidden-loadmore');
        });

        const btn = document.querySelector('.js-load-more');
        const remainingEl = document.querySelector('.js-remaining-count');
        const updateRemaining = () => {
            const remaining = list.querySelectorAll(cardSelector + '.is-hidden-loadmore').length;
            if (remainingEl) remainingEl.textContent = String(remaining);
            if (btn) btn.classList.toggle('hidden', remaining <= 0);
        };
        updateRemaining();

        btn?.addEventListener('click', () => {
            const hidden = Array.from(list.querySelectorAll(cardSelector + '.is-hidden-loadmore')).slice(0, pageSize);
            hidden.forEach(el => el.classList.remove('is-hidden-loadmore'));
            updateRemaining();
        });
    })();
// Toàn bộ panel "Apple" trở thành link tới trang ProductDetail
(function () {
    'use strict';
    var applePanel = document.getElementById('applePanel');
    if (!applePanel) return;

    // Hiển thị con trỏ dạng link
    applePanel.style.cursor = 'pointer';

    var targetUrl = '@Url.Action("ProductDetail", "Products")';

    function go() { window.location.href = targetUrl; }

    // Click chuột
    applePanel.addEventListener('click', function () { go(); });

    // Hỗ trợ bàn phím: Enter / Space
    applePanel.addEventListener('keydown', function (ev) {
        if (ev.key === 'Enter' || ev.key === ' ') {
            ev.preventDefault();
            go();
        }
    });
})();</script>